{"version":3,"sources":["store/movie-context.tsx","components/MovieItem.tsx","App.tsx","reportWebVitals.ts","utils/moviesData.ts","services/moviesService.tsx","store/MovieContextProvider.tsx","index.tsx"],"names":["MovieContext","React","createContext","loading","initialFetch","movies","error","confirmItem","rejectItem","MovieItem","imageURL","title","summary","rating","id","activeIndex","setActiveIndex","context","useContext","className","src","alt","onClick","confirmMovieHandler","rejectMovieHandler","App","useState","touchStart","setTouchStart","touchEnd","setTouchEnd","handleTouchStart","e","start","changedTouches","clientX","handleTouchMove","end","handleTouchEnd","useCallback","length","useEffect","window","addEventListener","removeEventListener","moviesContent","SwitchTransition","mode","CSSTransition","addEndListener","node","done","classNames","content","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","moviesData","acceptMovieAPI","data","a","fetch","method","headers","body","JSON","stringify","response","ok","json","catch","rejectMovieAPI","MovieContextProvider","children","setMovies","setLoading","setInitialFetch","setError","getMovies","moviesArray","setTimeout","confirmedItem","find","item","finally","rejectedItem","Provider","value","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f3aae8a8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { MovieItem } from \"../utils/moviesData\";\r\n\r\nexport interface movieContext {\r\n  loading: boolean;\r\n  initialFetch: boolean;\r\n  movies: MovieItem[] | [];\r\n  error: boolean;\r\n  confirmItem: (id: string) => void;\r\n  rejectItem: (id: string) => void;\r\n}\r\n\r\nconst MovieContext = React.createContext<movieContext>({\r\n  loading: true,\r\n  initialFetch: true,\r\n  movies: [],\r\n  error: false,\r\n  confirmItem: () => {},\r\n  rejectItem: () => {},\r\n});\r\n\r\nexport default MovieContext;\r\n","import React, { useContext } from \"react\";\r\nimport MovieContext from \"../store/movie-context\";\r\n\r\nimport \"../styles/MovieItem.scss\";\r\n\r\nexport interface MovieItemProps {\r\n  imageURL: string;\r\n  title: string;\r\n  summary: string;\r\n  rating: number;\r\n  id: string;\r\n  activeIndex: number;\r\n  setActiveIndex: any;\r\n}\r\n\r\nconst MovieItem: React.FC<MovieItemProps> = ({\r\n  imageURL,\r\n  title,\r\n  summary,\r\n  rating,\r\n  id,\r\n  activeIndex,\r\n  setActiveIndex,\r\n}) => {\r\n  const context = useContext(MovieContext);\r\n\r\n  const confirmMovieHandler = (id: string) => {\r\n    setActiveIndex((activeIndex += 1));\r\n    context.confirmItem(id);\r\n  };\r\n\r\n  const rejectMovieHandler = (id: string) => {\r\n    setActiveIndex((activeIndex += 1));\r\n    context.rejectItem(id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"section__movieItem\">\r\n      <div className=\"movieItem__image\">\r\n        <img src={imageURL} alt={title} />\r\n      </div>\r\n      <div className=\"movieItem__description\">\r\n        <h2>\r\n          {title} ({rating}/10)\r\n        </h2>\r\n        <p>{summary}</p>\r\n        <div className=\"actions\">\r\n          <button\r\n            data-testid=\"accept-button\"\r\n            className=\"button button__confirm\"\r\n            onClick={() => confirmMovieHandler(id)}\r\n          >\r\n            Accept\r\n          </button>\r\n          <button\r\n            data-testid=\"reject-button\"\r\n            className=\"button button__reject\"\r\n            onClick={() => rejectMovieHandler(id)}\r\n          >\r\n            Reject\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieItem;\r\n","import { useContext, useState, useEffect, useCallback } from \"react\";\r\nimport { SwitchTransition, CSSTransition } from \"react-transition-group\";\r\n\r\nimport MovieItem from \"./components/MovieItem\";\r\nimport MovieContext from \"./store/movie-context\";\r\n\r\nimport \"./styles/App.scss\";\r\n\r\nfunction App() {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [touchStart, setTouchStart] = useState(0);\r\n  const [touchEnd, setTouchEnd] = useState(0);\r\n\r\n  const context = useContext(MovieContext);\r\n\r\n  const handleTouchStart = (e: any) => {\r\n    const start = e.changedTouches[0].clientX;\r\n    setTouchStart(start);\r\n  };\r\n\r\n  const handleTouchMove = (e: any) => {\r\n    const end = e.changedTouches[0].clientX;\r\n    setTouchEnd(end);\r\n  };\r\n\r\n  const handleTouchEnd = useCallback(() => {\r\n    if (\r\n      touchStart - touchEnd < -150 &&\r\n      activeIndex <= context.movies.length - 1\r\n    ) {\r\n      context.rejectItem(context.movies[activeIndex].id);\r\n      setActiveIndex(activeIndex + 1);\r\n      setTouchStart(0);\r\n      setTouchEnd(0);\r\n    } else {\r\n      return;\r\n    }\r\n  }, [activeIndex, touchEnd, touchStart, context]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"touchstart\", handleTouchStart);\r\n    window.addEventListener(\"touchmove\", handleTouchMove);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"touchstart\", handleTouchStart);\r\n      window.removeEventListener(\"touchmove\", handleTouchMove);\r\n      window.removeEventListener(\"touchend\", handleTouchEnd);\r\n    };\r\n  }, [handleTouchEnd]);\r\n\r\n  window.addEventListener(\"touchend\", handleTouchEnd);\r\n\r\n  const moviesContent =\r\n    context.movies.length === activeIndex ? (\r\n      <div className=\"notification\">No more movies to rate!</div>\r\n    ) : (\r\n      <SwitchTransition mode={\"out-in\"}>\r\n        <CSSTransition\r\n          key={activeIndex}\r\n          addEndListener={(node, done) => {\r\n            node.addEventListener(\"transitionend\", done, false);\r\n          }}\r\n          classNames=\"fade\"\r\n        >\r\n          <MovieItem\r\n            key={context.movies[activeIndex].id}\r\n            id={context.movies[activeIndex].id}\r\n            imageURL={context.movies[activeIndex].imageURL}\r\n            title={context.movies[activeIndex].title}\r\n            summary={context.movies[activeIndex].summary}\r\n            rating={context.movies[activeIndex].rating}\r\n            activeIndex={activeIndex}\r\n            setActiveIndex={setActiveIndex}\r\n          />\r\n        </CSSTransition>\r\n      </SwitchTransition>\r\n    );\r\n\r\n  const content =\r\n    context.loading && context.initialFetch ? (\r\n      <div className=\"notification\">Loading...</div>\r\n    ) : (\r\n      moviesContent\r\n    );\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <h1>Movie Tinder</h1>\r\n      </header>\r\n      <section>{content}</section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export interface MovieItem {\r\n  id: string;\r\n  imageURL: string;\r\n  title: string;\r\n  summary: string;\r\n  rating: number;\r\n}\r\n\r\nexport const moviesData: MovieItem[] = [\r\n  {\r\n    id: \"1\",\r\n    imageURL:\r\n      \"https://images-na.ssl-images-amazon.com/images/M/MV5BMTUzNTE2NTkzMV5BMl5BanBnXkFtZTgwMDAzOTUyMDI@._V1_SY1000_CR0,0,674,1000_AL_.jpg\",\r\n    title: \"Inferno\",\r\n    summary:\r\n      \"Robert Langdon budzi się we florenckim szpitalu i za sprawą tajemniczego przedmiotu zostaje celem obławy. Ucieka z pomocą doktor Sienny, podążając śladem wskazówek zawartych w poemacie Dantego.\",\r\n    rating: 7.3,\r\n  },\r\n  {\r\n    id: \"2\",\r\n    imageURL:\r\n      \"https://images-na.ssl-images-amazon.com/images/M/MV5BOTAzODEzNDAzMl5BMl5BanBnXkFtZTgwMDU1MTgzNzE@._V1_SY1000_CR0,0,677,1000_AL_.jpg\",\r\n    title: \"Star Wars: Episode VII - The Force Awakens\",\r\n    summary:\r\n      \"Rey odnajduje Luke'a Skywalkera, by namówić go na powrót i walkę z Najwyższym Porządkiem. Tymczasem Rebelianci próbują uciec przed flotą wroga.\",\r\n    rating: 8.2,\r\n  },\r\n  {\r\n    id: \"3\",\r\n    imageURL: \"https://fwcdn.pl/fpo/54/09/695409/7641076.3.jpg\",\r\n    title: \"Gone Girl\",\r\n    summary:\r\n      \"Po przeprowadzce Amy i Nick przeżywają kryzys. Gdy w dniu rocznicy ślubu kobieta znika bez śladu, jej mąż staje się głównym podejrzanym.\",\r\n    rating: 7.6,\r\n  },\r\n  {\r\n    id: \"4\",\r\n    imageURL: \"https://fwcdn.pl/fpo/09/98/998/7314731.3.jpg\",\r\n    title: \"Forrest Gump\",\r\n    summary:\r\n      \"Historia życia Forresta, chłopca o niskim ilorazie inteligencji z niedowładem kończyn, który staje się miliarderem i bohaterem wojny w Wietnamie.\",\r\n    rating: 9.1,\r\n  },\r\n  {\r\n    id: \"5\",\r\n    imageURL:\r\n      \"https://a.allegroimg.com/original/115ff0/f21862b74a818d099ddb61dce75f/INTERSTELLAR-DVD\",\r\n    title: \"Interstellar\",\r\n    summary:\r\n      \"Byt ludzkości na Ziemi dobiega końca wskutek zmian klimatycznych. Grupa naukowców odkrywa tunel czasoprzestrzenny, który umożliwia poszukiwanie nowego domu.\",\r\n    rating: 8.4,\r\n  },\r\n];\r\n","import { MovieItem, moviesData } from \"../utils/moviesData\";\r\n\r\nexport const callMoviesAPI = () => {\r\n  // here should be fetch POST request to \"URL/recommendations\" with try catch block which returns movies data or handle error\r\n  return moviesData;\r\n};\r\n\r\nexport const acceptMovieAPI = async (id: string, data: MovieItem) => {\r\n  return fetch(`URL/recommendations/${id}/accept`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(data),\r\n  })\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw response;\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n};\r\n\r\nexport const rejectMovieAPI = async (id: string, data: MovieItem) => {\r\n  return fetch(`URL/recommendations/${id}/reject`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(data),\r\n  })\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw response;\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport MovieContext, { movieContext } from \"./movie-context\";\r\n\r\nimport {\r\n  callMoviesAPI,\r\n  acceptMovieAPI,\r\n  rejectMovieAPI,\r\n} from \"../services/moviesService\";\r\nimport { MovieItem } from \"../utils/moviesData\";\r\n\r\nexport const MovieContextProvider: React.FC = ({ children }) => {\r\n  const [movies, setMovies] = useState<MovieItem[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [initialFetch, setInitialFetch] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  const getMovies = async () => {\r\n    const moviesArray = await callMoviesAPI();\r\n    if (moviesArray) {\r\n      setMovies(moviesArray);\r\n    } else {\r\n      setMovies([]);\r\n    }\r\n    setLoading(false);\r\n    setInitialFetch(false);\r\n  };\r\n\r\n  const confirmItem = (id: string) => {\r\n    setLoading(true);\r\n    const confirmedItem = [...movies].find((item) => item.id === id);\r\n    acceptMovieAPI(id, confirmedItem!)\r\n      .then((data) => {\r\n        // if our response is ok\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n        //error handling - in our case API call always returns error as URL does not exist\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  const rejectItem = (id: string) => {\r\n    setLoading(true);\r\n    const rejectedItem = [...movies].find((item) => item.id === id);\r\n    rejectMovieAPI(id, rejectedItem!)\r\n      .then((data) => {\r\n        // if our response is ok\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n        //error handling - in our case API call always returns error as URL does not exist\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    //setTimeout added to simulate fetching time\r\n    setTimeout(() => {\r\n      getMovies();\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const context: movieContext = {\r\n    loading,\r\n    initialFetch,\r\n    movies,\r\n    error,\r\n    confirmItem,\r\n    rejectItem,\r\n  };\r\n\r\n  return (\r\n    <MovieContext.Provider value={context}>{children}</MovieContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { MovieContextProvider } from \"./store/MovieContextProvider\";\n\nReactDOM.render(\n  <MovieContextProvider>\n    <App />\n  </MovieContextProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}